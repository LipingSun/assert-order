var AssertOrder=function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=1)}([function(t,e,n){"use strict";var i=function(){function t(t,e){void 0===e&&(e=0),this.plannedSteps=t,this.miniSteps=0,this.nextStep=e,this.possibleMoves={once:[e],some:[e],all:[e]}}return Object.defineProperty(t.prototype,"next",{get:function(){return this.nextStep},enumerable:!0,configurable:!0}),t.prototype.end=function(t){var e=this,n=function(){return void 0===e.plannedSteps||e.nextStep===e.plannedSteps},i=function(){return"Planned "+e.plannedSteps+" steps but executed "+e.nextStep+" steps"};if(t)return new Promise(function(e,r){setTimeout(function(){n()?e():r(new Error(i()))},t)});if(!n())throw new Error(i())},t.prototype.step=function(t){if(this.isValidStep("step",[t]))return this.moveNext(),this.nextStep++;throw new Error(this.getErrorMessage("step",t))},t.prototype.once=function(t){if(this.isValidStep("once",[t]))return this.moveNext(),this.nextStep++;throw new Error(this.getErrorMessage("once",t))},t.prototype.any=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(this.isValidStep("any",t))return this.moveNext(),this.nextStep++;throw new Error(this.getErrorMessage.apply(this,["any"].concat(t)))},t.prototype.some=function(t){if(this.isValidStep("some",[t]))return t===this.nextStep&&(this.moveNext({once:[t+1],some:[t,t+1],all:[t+1]}),this.miniSteps=0,this.nextStep++),++this.miniSteps;throw new Error(this.getErrorMessage("some",t))},t.prototype.all=function(t,e){if(e<=0)throw new Error(e+" is not a valid 'plan' value.");if(this.targetMiniSteps&&this.targetMiniSteps!==e)throw new Error("The plan count ("+e+") does not match with previous value ("+this.targetMiniSteps+").");if(this.isValidStep("all",[t],e))return void 0===this.targetMiniSteps&&(this.targetMiniSteps=e,this.miniSteps=0,this.moveNext({all:[t]})),this.miniSteps++,e===this.miniSteps&&(this.moveNext(),this.nextStep++,this.targetMiniSteps=void 0),this.miniSteps;throw new Error(this.getErrorMessage("all",t))},t.prototype.isValidStep=function(e,n,i){var r=this,s=t.alias[e]||e,o=n.find(function(t){return r.possibleMoves[s]&&r.possibleMoves[s].some(function(e){return e===t})});return(!i||this.miniSteps<=i)&&void 0!==o},t.prototype.moveNext=function(t){void 0===t&&(t={once:[this.nextStep+1],some:[this.nextStep+1],all:[this.nextStep+1]}),this.possibleMoves=t},t.prototype.getErrorMessage=function(e){for(var n=this,i=[],r=1;r<arguments.length;r++)i[r-1]=arguments[r];var s=[],o=function(e){s.push.apply(s,[e].concat(t.reverseAlias[e]).map(function(t){return"'"+t+"("+n.possibleMoves[e].join("|")+")'"}))};for(var p in this.possibleMoves)o(p);return"Expecting "+s.join(", ")+", but received '"+e+"("+i.join(",")+")'"},t}();i.alias={step:"once",any:"once"},i.reverseAlias={once:["step"],some:[],all:[]},e.AssertOrder=i},function(t,e,n){"use strict";var i=n(0);Object.defineProperty(e,"__esModule",{value:!0}),e.default=i.AssertOrder}]);
//# sourceMappingURL=assert-order.es5.js.map