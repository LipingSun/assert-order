{"version":3,"sources":["webpack:///assert-order.es5.js","webpack:///webpack/bootstrap 68d87d75b19d2225f1fe","webpack:////assert-order/assertOrder.ts","webpack:////assert-order/index.ts"],"names":["AssertOrder","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","plannedSteps","initStep","this","miniSteps","nextStep","possibleMoves","once","some","all","end","timeout","_this","check","undefined","getErrorMsg","Promise","resolve","reject","setTimeout","Error","step","isValidStep","moveNext","getErrorMessage","any","anySteps","_i","arguments","length","apply","concat","plan","targetMiniSteps","fnName","steps","count","id","alias","find","x","nextMoves","calledFn","calledSteps","should","_loop_1","key","push","reverseAlias","map","join","assertOrder_1","default"],"mappings":"AAAA,GAAIA,aACM,SAASC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,KDOO,SAASvB,EAAQD,EAASH,GAEjC,YEnEA,IAAAF,GAAA,WAoBE,QAAAA,GAAmB8B,EAAuBC,GAAA,SAAAA,MAAA,GAAvBC,KAAAF,eAFXE,KAAAC,UAAY,EAGlBD,KAAKE,SAAWH,EAChBC,KAAKG,eACHC,MAAOL,GACPM,MAAON,GACPO,KAAMP,IAyJZ,MAnKEd,QAAAC,eAAWlB,EAAA0B,UAAA,QFuELL,IEvEN,WAAoB,MAAOW,MAAKE,UFwE1Bd,YAAY,EACZD,cAAc,IErDpBnB,EAAA0B,UAAAa,IAAA,SAAIC,GAAJ,GAAAC,GAAAT,KACQU,EAAS,WACb,MAA6BC,UAAtBF,EAAKX,cAA8BW,EAAKP,WAAaO,EAAKX,cAE7Dc,EAAc,WAAM,iBAAWH,EAAKX,aAAY,uBAAuBW,EAAKP,SAAQ,SAE1F,IAAIM,EACF,MAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,WAAW,WACLN,IACFI,IAGAC,EAAO,GAAIE,OAAML,OAElBJ,IAIP,KAAKE,IACH,KAAM,IAAIO,OAAML,MAIpB5C,EAAA0B,UAAAwB,KAAA,SAAKA,GACH,GAAIlB,KAAKmB,YAAY,QAASD,IAE5B,MADAlB,MAAKoB,WACEpB,KAAKE,UAGZ,MAAM,IAAIe,OAAMjB,KAAKqB,gBAAgB,OAAQH,KAOjDlD,EAAA0B,UAAAU,KAAA,SAAKc,GAEH,GAAIlB,KAAKmB,YAAY,QAASD,IAE5B,MADAlB,MAAKoB,WACEpB,KAAKE,UAGZ,MAAM,IAAIe,OAAMjB,KAAKqB,gBAAgB,OAAQH,KAQjDlD,EAAA0B,UAAA4B,IAAA,WFqDM,IErDF,GAAAC,MAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,EACF,IAAIxB,KAAKmB,YAAY,MAAOI,GAE1B,MADAvB,MAAKoB,WACEpB,KAAKE,UAGZ,MAAM,IAAIe,OAAMjB,KAAKqB,gBAAeM,MAApB3B,MAAqB,OAAK4B,OAAKL,MAQnDvD,EAAA0B,UAAAW,KAAA,SAAKa,GACH,GAAIlB,KAAKmB,YAAY,QAASD,IAW5B,MAVIA,KAASlB,KAAKE,WAChBF,KAAKoB,UACHhB,MAAOc,EAAO,GACdb,MAAOa,EAAMA,EAAO,GACpBZ,KAAMY,EAAO,KAEflB,KAAKC,UAAY,EACjBD,KAAKE,cAGEF,KAAKC,SAGd,MAAM,IAAIgB,OAAMjB,KAAKqB,gBAAgB,OAAQH,KAQjDlD,EAAA0B,UAAAY,IAAA,SAAIY,EAAcW,GAChB,GAAIA,GAAQ,EACV,KAAM,IAAIZ,OAASY,EAAI,gCAEzB,IAAI7B,KAAK8B,iBAAmB9B,KAAK8B,kBAAoBD,EACnD,KAAM,IAAIZ,OAAM,mBAAmBY,EAAI,yCAAyC7B,KAAK8B,gBAAe,KAGtG,IAAI9B,KAAKmB,YAAY,OAAQD,GAAOW,GAelC,MAd6BlB,UAAzBX,KAAK8B,kBACP9B,KAAK8B,gBAAkBD,EACvB7B,KAAKC,UAAY,EACjBD,KAAKoB,UACHd,KAAMY,MAIVlB,KAAKC,YACD4B,IAAS7B,KAAKC,YAChBD,KAAKoB,WACLpB,KAAKE,WACLF,KAAK8B,gBAAkBnB,QAElBX,KAAKC,SAGZ,MAAM,IAAIgB,OAAMjB,KAAKqB,gBAAgB,MAAOH,KAIxClD,EAAA0B,UAAAyB,YAAR,SAAoBY,EAAgBC,EAAiBC,GAArD,GAAAxB,GAAAT,KAEQkC,EAAKlE,EAAYmE,MAAMJ,IAAWA,EAClCb,EAAOc,EAAMI,KAAK,SAAAvC,GAAK,MAAAY,GAAKN,cAAc+B,IAAOzB,EAAKN,cAAc+B,GAAI7B,KAAK,SAAAgC,GAAK,MAAAA,KAAMxC,KAC9F,SAASoC,GAASjC,KAAKC,WAAagC,IAAmBtB,SAATO,GAExClD,EAAA0B,UAAA0B,SAAR,SAAiBkB,GAAA,SAAAA,OACflC,MAAOJ,KAAKE,SAAW,GACvBG,MAAOL,KAAKE,SAAW,GACvBI,KAAMN,KAAKE,SAAW,KAEtBF,KAAKG,cAAgBmC,GAGftE,EAAA0B,UAAA2B,gBAAR,SAAwBkB,GFqDlB,IErDoC,GAA1C9B,GAAAT,KAA0CwC,KAAAhB,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAgB,EAAAhB,EAAA,GAAAC,UAAAD,EACxC,IAAMiB,MFwDEC,EAAU,SEvDTC,GACPF,EAAOG,KAAIjB,MAAXc,GAAiBE,GAAGf,OAAK5D,EAAY6E,aAAaF,IAAMG,IAAI,SAAAhE,GAC1D,UAAIA,EAAI,IAAI2B,EAAKN,cAAcwC,GAAKI,KAAK,KAAI,QAFjD,KAAK,GAAIJ,KAAO3C,MAAKG,cF6DbuC,EE7DCC,EAMT,OAAO,aAAaF,EAAOM,KAAK,MAAK,mBAAmBR,EAAQ,IAAIC,EAAYO,KAAK,KAAI,MAE7F/E,IAjLiBA,GAAAmE,OACbjB,KAAM,OACNI,IAAK,QAEQtD,EAAA6E,cACbzC,MAAO,QACPC,QACAC,QARSjC,EAAAL,eF2PN,SAASM,EAAQD,EAASH,GAEjC,YGnQA,IAAA8E,GAAA9E,EAAA,EHsQAe,QAAOC,eAAeb,EAAS,cAAgBO,OAAO,IGrQtDP,EAAA4E,QAAeD,EAAAhF","file":"assert-order.es5.js","sourcesContent":["var AssertOrder =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar AssertOrder = (function () {\n    function AssertOrder(plannedSteps, initStep) {\n        if (initStep === void 0) { initStep = 0; }\n        this.plannedSteps = plannedSteps;\n        this.miniSteps = 0;\n        this.nextStep = initStep;\n        this.possibleMoves = {\n            once: [initStep],\n            some: [initStep],\n            all: [initStep]\n        };\n    }\n    Object.defineProperty(AssertOrder.prototype, \"next\", {\n        /**\n         * Gets what is the next expecting step.\n         * If the current step is `some(n)`, this reflects the step after `some(n)`\n         */\n        get: function () { return this.nextStep; },\n        enumerable: true,\n        configurable: true\n    });\n    AssertOrder.prototype.end = function (timeout) {\n        var _this = this;\n        var check = (function () {\n            return _this.plannedSteps === undefined || _this.nextStep === _this.plannedSteps;\n        });\n        var getErrorMsg = function () { return \"Planned \" + _this.plannedSteps + \" steps but executed \" + _this.nextStep + \" steps\"; };\n        if (timeout) {\n            return new Promise(function (resolve, reject) {\n                setTimeout(function () {\n                    if (check()) {\n                        resolve();\n                    }\n                    else {\n                        reject(new Error(getErrorMsg()));\n                    }\n                }, timeout);\n            });\n        }\n        if (!check()) {\n            throw new Error(getErrorMsg());\n        }\n    };\n    AssertOrder.prototype.step = function (step) {\n        if (this.isValidStep('step', [step])) {\n            this.moveNext();\n            return this.nextStep++;\n        }\n        else {\n            throw new Error(this.getErrorMessage('step', step));\n        }\n    };\n    /**\n     * Assert the specified step will run once.\n     */\n    AssertOrder.prototype.once = function (step) {\n        // this.validate('once', [step], 1)\n        if (this.isValidStep('once', [step])) {\n            this.moveNext();\n            return this.nextStep++;\n        }\n        else {\n            throw new Error(this.getErrorMessage('once', step));\n        }\n    };\n    /**\n     * Assert this place will be called during any of the specified steps.\n     * @returns the step it is being called right now.\n     */\n    AssertOrder.prototype.any = function () {\n        var anySteps = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            anySteps[_i] = arguments[_i];\n        }\n        if (this.isValidStep('any', anySteps)) {\n            this.moveNext();\n            return this.nextStep++;\n        }\n        else {\n            throw new Error(this.getErrorMessage.apply(this, ['any'].concat(anySteps)));\n        }\n    };\n    /**\n     * Assert the specified step will be reached at least once.\n     * @returns how many times this step has occured.\n     */\n    AssertOrder.prototype.some = function (step) {\n        if (this.isValidStep('some', [step])) {\n            if (step === this.nextStep) {\n                this.moveNext({\n                    once: [step + 1],\n                    some: [step, step + 1],\n                    all: [step + 1]\n                });\n                this.miniSteps = 0;\n                this.nextStep++;\n            }\n            return ++this.miniSteps;\n        }\n        else {\n            throw new Error(this.getErrorMessage('some', step));\n        }\n    };\n    /**\n     * Assert the specified step will be reached x times.\n     * @returns how many times this step has occured.\n     */\n    AssertOrder.prototype.all = function (step, plan) {\n        if (plan <= 0) {\n            throw new Error(plan + \" is not a valid 'plan' value.\");\n        }\n        if (this.targetMiniSteps && this.targetMiniSteps !== plan) {\n            throw new Error(\"The plan count (\" + plan + \") does not match with previous value (\" + this.targetMiniSteps + \").\");\n        }\n        if (this.isValidStep('all', [step], plan)) {\n            if (this.targetMiniSteps === undefined) {\n                this.targetMiniSteps = plan;\n                this.miniSteps = 0;\n                this.moveNext({\n                    all: [step]\n                });\n            }\n            this.miniSteps++;\n            if (plan === this.miniSteps) {\n                this.moveNext();\n                this.nextStep++;\n                this.targetMiniSteps = undefined;\n            }\n            return this.miniSteps;\n        }\n        else {\n            throw new Error(this.getErrorMessage('all', step));\n        }\n    };\n    AssertOrder.prototype.isValidStep = function (fnName, steps, count) {\n        var _this = this;\n        // console.log(`${fnName}(${steps}${count ? ',' + count : ''}), c: ${this.currentStep}, m: ${this.miniSteps}`, this.possibleMoves)\n        var id = AssertOrder.alias[fnName] || fnName;\n        var step = steps.find(function (s) { return _this.possibleMoves[id] && _this.possibleMoves[id].some(function (x) { return x === s; }); });\n        return (!count || this.miniSteps <= count) && step !== undefined;\n    };\n    AssertOrder.prototype.moveNext = function (nextMoves) {\n        if (nextMoves === void 0) { nextMoves = {\n            once: [this.nextStep + 1],\n            some: [this.nextStep + 1],\n            all: [this.nextStep + 1]\n        }; }\n        this.possibleMoves = nextMoves;\n    };\n    AssertOrder.prototype.getErrorMessage = function (calledFn) {\n        var _this = this;\n        var calledSteps = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            calledSteps[_i - 1] = arguments[_i];\n        }\n        var should = [];\n        var _loop_1 = function (key) {\n            should.push.apply(should, ([key].concat(AssertOrder.reverseAlias[key]).map(function (name) {\n                return \"'\" + name + \"(\" + _this.possibleMoves[key].join('|') + \")'\";\n            })));\n        };\n        for (var key in this.possibleMoves) {\n            _loop_1(key);\n        }\n        return \"Expecting \" + should.join(', ') + \", but received '\" + calledFn + \"(\" + calledSteps.join(',') + \")'\";\n    };\n    return AssertOrder;\n}());\nAssertOrder.alias = {\n    step: 'once',\n    any: 'once'\n};\nAssertOrder.reverseAlias = {\n    once: ['step'],\n    some: [],\n    all: []\n};\nexports.AssertOrder = AssertOrder;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar assertOrder_1 = __webpack_require__(0);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = assertOrder_1.AssertOrder;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// assert-order.es5.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 68d87d75b19d2225f1fe","export interface Steps {\n  once?: number[]\n  some?: number[]\n  all?: number[]\n}\n\nexport class AssertOrder {\n  private static alias = {\n    step: 'once',\n    any: 'once'\n  }\n  private static reverseAlias = {\n    once: ['step'],\n    some: [],\n    all: []\n  }\n\n  /**\n   * Gets what is the next expecting step.\n   * If the current step is `some(n)`, this reflects the step after `some(n)`\n   */\n  public get next() { return this.nextStep }\n  private nextStep: number\n  private possibleMoves: Steps\n  private miniSteps = 0\n  private targetMiniSteps: number | undefined\n  constructor(public plannedSteps?: number, initStep = 0) {\n    this.nextStep = initStep\n    this.possibleMoves = {\n      once: [initStep],\n      some: [initStep],\n      all: [initStep]\n    }\n  }\n\n  /**\n   * Verify all planned steps are executed.\n   * @param timeout If specified, will return a promise that resolve after the specified time (in milliseconds) or rejected if failed.\n   */\n  end(timeout: number): Promise<never>\n  end(): void\n  end(timeout?: number) {\n    const check = (() => {\n      return this.plannedSteps === undefined || this.nextStep === this.plannedSteps\n    })\n    const getErrorMsg = () => `Planned ${this.plannedSteps} steps but executed ${this.nextStep} steps`\n\n    if (timeout) {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (check()) {\n            resolve()\n          }\n          else {\n            reject(new Error(getErrorMsg()))\n          }\n        }, timeout);\n      })\n    }\n\n    if (!check()) {\n      throw new Error(getErrorMsg())\n    }\n  }\n\n  step(step: number) {\n    if (this.isValidStep('step', [step])) {\n      this.moveNext()\n      return this.nextStep++\n    }\n    else {\n      throw new Error(this.getErrorMessage('step', step))\n    }\n  }\n\n  /**\n   * Assert the specified step will run once.\n   */\n  once(step: number) {\n    // this.validate('once', [step], 1)\n    if (this.isValidStep('once', [step])) {\n      this.moveNext()\n      return this.nextStep++\n    }\n    else {\n      throw new Error(this.getErrorMessage('once', step))\n    }\n  }\n\n  /**\n   * Assert this place will be called during any of the specified steps.\n   * @returns the step it is being called right now.\n   */\n  any(...anySteps: number[]) {\n    if (this.isValidStep('any', anySteps)) {\n      this.moveNext()\n      return this.nextStep++\n    }\n    else {\n      throw new Error(this.getErrorMessage('any', ...anySteps))\n    }\n  }\n\n  /**\n   * Assert the specified step will be reached at least once.\n   * @returns how many times this step has occured.\n   */\n  some(step: number) {\n    if (this.isValidStep('some', [step])) {\n      if (step === this.nextStep) {\n        this.moveNext({\n          once: [step + 1],\n          some: [step, step + 1],\n          all: [step + 1]\n        })\n        this.miniSteps = 0\n        this.nextStep++\n      }\n\n      return ++this.miniSteps\n    }\n    else {\n      throw new Error(this.getErrorMessage('some', step))\n    }\n  }\n\n  /**\n   * Assert the specified step will be reached x times.\n   * @returns how many times this step has occured.\n   */\n  all(step: number, plan: number) {\n    if (plan <= 0) {\n      throw new Error(`${plan} is not a valid 'plan' value.`)\n    }\n    if (this.targetMiniSteps && this.targetMiniSteps !== plan) {\n      throw new Error(`The plan count (${plan}) does not match with previous value (${this.targetMiniSteps}).`)\n    }\n\n    if (this.isValidStep('all', [step], plan)) {\n      if (this.targetMiniSteps === undefined) {\n        this.targetMiniSteps = plan\n        this.miniSteps = 0\n        this.moveNext({\n          all: [step]\n        })\n      }\n\n      this.miniSteps++\n      if (plan === this.miniSteps) {\n        this.moveNext()\n        this.nextStep++\n        this.targetMiniSteps = undefined\n      }\n      return this.miniSteps\n    }\n    else {\n      throw new Error(this.getErrorMessage('all', step))\n    }\n  }\n\n  private isValidStep(fnName: string, steps: number[], count?: number) {\n    // console.log(`${fnName}(${steps}${count ? ',' + count : ''}), c: ${this.currentStep}, m: ${this.miniSteps}`, this.possibleMoves)\n    const id = AssertOrder.alias[fnName] || fnName\n    const step = steps.find(s => this.possibleMoves[id] && this.possibleMoves[id].some(x => x === s))\n    return (!count || this.miniSteps <= count) && step !== undefined\n  }\n  private moveNext(nextMoves: Steps = {\n    once: [this.nextStep + 1],\n    some: [this.nextStep + 1],\n    all: [this.nextStep + 1]\n  }) {\n    this.possibleMoves = nextMoves\n  }\n\n  private getErrorMessage(calledFn: string, ...calledSteps: number[]) {\n    const should: string[] = []\n    for (let key in this.possibleMoves) {\n      should.push(...([key, ...AssertOrder.reverseAlias[key]].map(name =>\n        `'${name}(${this.possibleMoves[key].join('|')})'`\n      )))\n    }\n\n    return `Expecting ${should.join(', ')}, but received '${calledFn}(${calledSteps.join(',')})'`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /assert-order/assertOrder.ts","import { AssertOrder } from './assertOrder'\nexport default AssertOrder\n\n\n\n// WEBPACK FOOTER //\n// /assert-order/index.ts"],"sourceRoot":""}